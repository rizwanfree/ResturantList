// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResturantList.Data;

#nullable disable

namespace ResturantList.Migrations
{
    [DbContext(typeof(ResturantListContext))]
    [Migration("20241217112403_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResturantList.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pizza",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pasta",
                            Price = 9.0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cheese Bread",
                            Price = 5.0
                        });
                });

            modelBuilder.Entity("ResturantList.Models.Resturant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Resturants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 Culinary St, Flavor, CA 90210",
                            ImageURL = "https://www.whereyoueat.com/r_gallery_images/rgallery-21635/Best_Italian_Pizza2.jpg",
                            Name = "Gourment Pizzeria"
                        });
                });

            modelBuilder.Entity("ResturantList.Models.ResturantDish", b =>
                {
                    b.Property<int>("ResturantId")
                        .HasColumnType("int");

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.HasKey("ResturantId", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("ResturantsDishes");

                    b.HasData(
                        new
                        {
                            ResturantId = 1,
                            DishId = 1
                        },
                        new
                        {
                            ResturantId = 1,
                            DishId = 2
                        },
                        new
                        {
                            ResturantId = 1,
                            DishId = 3
                        });
                });

            modelBuilder.Entity("ResturantList.Models.ResturantDish", b =>
                {
                    b.HasOne("ResturantList.Models.Dish", "Dish")
                        .WithMany("ResturantDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResturantList.Models.Resturant", "Resturant")
                        .WithMany("ResturantDishes")
                        .HasForeignKey("ResturantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Resturant");
                });

            modelBuilder.Entity("ResturantList.Models.Dish", b =>
                {
                    b.Navigation("ResturantDishes");
                });

            modelBuilder.Entity("ResturantList.Models.Resturant", b =>
                {
                    b.Navigation("ResturantDishes");
                });
#pragma warning restore 612, 618
        }
    }
}
